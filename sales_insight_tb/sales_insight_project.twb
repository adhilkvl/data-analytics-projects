<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0123.2221                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0123.2221)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.15pg2kb1sm3e6x16wdjg51vzg980'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions].[market_code]' />
                <expression op='[markets].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions].[order_date]' />
                  <expression op='[date].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.15pg2kb1sm3e6x16wdjg51vzg980' name='transactions' table='[transactions]' type='table' />
                <relation connection='mysql.15pg2kb1sm3e6x16wdjg51vzg980' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.15pg2kb1sm3e6x16wdjg51vzg980' name='date' table='[date]' type='table' />
            </relation>
            <relation connection='mysql.15pg2kb1sm3e6x16wdjg51vzg980' name='markets' table='[markets]' type='table' />
          </relation>
          <relation connection='mysql.15pg2kb1sm3e6x16wdjg51vzg980' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized Amount' datatype='real' name='[Calculation_1521372296628842496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [currency] == &quot;USD&quot; THEN [sales_amount]*74 ELSE [sales_amount] END' />
      </column>
      <column caption='blank' datatype='real' name='[Calculation_1521372296646590465]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='_ _' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Cy Date))' hidden='true' name='[Action (QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.733933' measure-ordering='alphabetic' measure-percentage='0.266067' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_1521372296628842496' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter from='&quot;Mark001&quot;' function='range' level='[markets_code]' to='&quot;Mark015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 2 (generated) 1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Revenue by markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Top 5 customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Top 5 products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1 (2)' type='sheet' worksheet='Sales qty by markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1 (2)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1521372296628842496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] == &quot;USD&quot; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1521372296628842496]' derivation='Sum' name='[sum:Calculation_1521372296628842496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='18'>  TOTAL REVENU</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='18'>&lt;[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Revenue by markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1521372296628842496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] == &quot;USD&quot; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1521372296628842496]' derivation='Sum' name='[sum:Calculation_1521372296628842496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]' direction='DESC' using='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]</rows>
        <cols>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Revenue by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1521372296628842496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] == &quot;USD&quot; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1521372296628842496]' derivation='Sum' name='[sum:Calculation_1521372296628842496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[tqr:cy_date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</rows>
        <cols>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[tqr:cy_date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales qty by markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]' direction='DESC' using='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' />
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' value='c#,##0,.00K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' />
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]</rows>
        <cols>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1521372296628842496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] == &quot;USD&quot; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1521372296628842496]' derivation='Sum' name='[sum:Calculation_1521372296628842496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1521372296628842496])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:custmer_name:nk]' direction='DESC' using='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:custmer_name:nk]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' value='c#,##0,,.00M' />
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:custmer_name:nk]' value='148' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>&lt;</run>
                <run bold='true' fontsize='10'>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</run>
                <run bold='true' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:custmer_name:nk]</rows>
        <cols>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_1521372296628842496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [currency] == &quot;USD&quot; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1521372296628842496]' derivation='Sum' name='[sum:Calculation_1521372296628842496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1521372296628842496])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_code (products):nk]' direction='DESC' using='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_code (products):nk]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_code (products):nk]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>&lt;</run>
                <run bold='true' fontsize='10'>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</run>
                <run bold='true' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_code (products):nk]</rows>
        <cols>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1521372296647127043]' derivation='None' name='[none:Calculation_1521372296647127043:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='13' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[mn:cy_date:ok]' value='11' />
            <format attr='color' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[mn:cy_date:ok]' value='#4e79a7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:Calculation_1521372296647127043:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[mn:cy_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1521372296647127043]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' value='c&quot; &quot;#,##0,.00K;&quot; &quot;-#,##0,.00K' />
            <format attr='color' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' value='#4e79a7' />
            <format attr='color' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='18'>&lt;[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1ibp8li1s8fsvq12a2i1v1doizjp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ibp8li1s8fsvq12a2i1v1doizjp'>
            <column caption='Blank' datatype='string' name='[Calculation_1521372296647127043]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1521372296647127043]' derivation='None' name='[none:Calculation_1521372296647127043:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Markets Name)]</column>
            <column>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:Calculation_1521372296647127043:nk]' value='6' />
            <format attr='height' value='7' />
            <format attr='color' value='#4e79a7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]' value='#4e79a7' />
            <format attr='font-weight' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:Calculation_1521372296647127043:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1 (2)'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='12' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='15' param='vert' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='13' type='layout-basic' w='99000' x='500' y='889' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12000' id='1' name='year' show-title='false' w='4000' x='68000' y='4778' />
        <zone h='5667' id='2' name='month' show-title='false' w='46375' x='26438' y='1111' />
        <zone h='11222' id='3' name='Revenue' show-title='false' w='16125' x='8938' y='15000' />
        <zone h='70778' id='4' name='Revenue by markets' show-title='false' w='29000' x='500' y='25333' />
        <zone h='9778' id='5' name='quantity' show-title='false' w='15188' x='78500' y='14222' />
        <zone h='73333' id='6' name='Sales qty by markets' show-title='false' w='31375' x='68563' y='24222' />
        <zone h='9778' id='7' name='Sales qty by markets' pane-specification-id='0' param='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' type='color' w='8750' x='90000' y='38111' />
        <zone h='12444' id='8' name='Revenue by year' show-title='false' w='37750' x='30250' y='4889' />
        <zone h='35000' id='10' name='Top 5 customers' w='34250' x='32563' y='23222' />
        <zone h='32667' id='11' name='Top 5 products' w='31313' x='34063' y='57778' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FCECD98C-A448-4077-A25E-3789ABCCB5D3}' />
    </window>
    <window class='worksheet' name='quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:Calculation_1521372296628842496:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90BEDDBC-2AF7-4C3C-ACD7-5CCF5DCD6A27}' />
    </window>
    <window class='worksheet' name='Revenue by markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:market_code:nk]</field>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A17E3BD-61DA-4D68-B291-78B1BC89A208}' />
    </window>
    <window class='worksheet' name='Sales qty by markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:sales_qty:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7888011-7DC3-4DB3-818C-E8F32F6F60F3}' />
    </window>
    <window class='worksheet' name='Top 5 customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CEFD1AA-021A-4055-A520-E83D4D919ADD}' />
    </window>
    <window class='worksheet' name='Top 5 products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_code (products):nk]</field>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:product_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C53A8DC4-5F41-4564-A36F-0A3E86D40499}' />
    </window>
    <window class='worksheet' name='Revenue by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[sum:Calculation_1521372296628842496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06F7CF35-2A12-44BE-90AD-4DE622A21656}' />
    </window>
    <window class='worksheet' name='year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:Calculation_1521372296647127043:nk]</field>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94D243E4-CB22-47E2-9A2B-FAE7AA07D1E2}' />
    </window>
    <window class='worksheet' name='month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[none:Calculation_1521372296647127043:nk]</field>
            <field>[federated.1ibp8li1s8fsvq12a2i1v1doizjp].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{478B8E6F-19CA-4A59-A1F2-0EEA500858F2}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by markets' />
        <viewpoint name='Revenue by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales qty by markets' />
        <viewpoint name='Top 5 customers' />
        <viewpoint name='Top 5 products' />
        <viewpoint name='month' />
        <viewpoint name='quantity' />
        <viewpoint name='year' />
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{A0710D0F-B884-41FB-A3F4-4431A5A4500E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      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
      Ph4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='86' name='Revenue' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by year' width='192'>
      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
      BhvJHJ0dEf4/EtWIKdebfK0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales qty by markets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dV4wkWXaev4hI78t770378TM7a7i75JJryCVFJ1IgBAESRVDQiwABehHE
      BwECBAokKICkSGoXpEgud0nuLmeWs3b8dM90V3d1l/feZKV3kZHh9FA9pntMV01ndmd33e+l
      UGlOnpMZJ+6Je/64V7Jt20YgOKHI99sBgeB+UrUJYFlW2W3atk25Bzzbtivi64MSP1TG10rF
      f7vdE5cAD8qPZZpm2W1WKv5K+Fqp+G8/ATjK/ill4urCFr/35/9cXqNvxy6V16YNSOW0Cdh2
      +W1WJH4q4+u9ir9qE0Atlljeit1vNwQPOVVbAgkE94K7GAGyvPCdi9Q0BejsP01znf/wYT3D
      9cUkXqVE/9AAEjaJeJLauloONqaZPXDwRK+P5bwfR3qdjGbT1t7J1PUJQv4AzX1jdDaGyxOd
      QHAH7iIBbJo7+jh9uoMbcwsktzVSmQLdg72YlkUus8/VKzF8NT1o6QNq62qRFDcBRSWRU7Bs
      D7mSxPlz55DMItuN7fQ3BYiW9PJFJxDcgbsugYySCjZs7kTxBYO4HAoAvnADZy+cQ9IKt7y+
      vbub7fU1QMY0StjYWJZNfG+D1yYW6GiuvVuXBIIjcxcjgAstv8/MksrQyAi1PgcHGQ2ny0tD
      nQOXZCChEKkJYegeADz+MHh9tLe3ofnctHa2cPXqNTq6ehg5dY6msJedvShd7c1lCk8g+Gik
      apVCvDyxwG//j2/cbzcEDzliFkhwoqnaEWB9N8YP31ooq823Q5XK3GGxLAtZLu+5pBI2Rfzv
      j79qE8AwDByO8vbpLMvCtm0URSmbTdu2MU2z7L7quo7T6SyrzUrED5Xx9V7FL0ogwYmmaqUQ
      e2mVVxbiZbVZmRLgcBr3QS0BykGlSyCnIvNLj3WW1f7bVG0CZFWDyY3k/XZDUAV4nErFEkCU
      QIITTdlGAC2X5K0bKzz95AU2pt8kG+hlvKv+Q1+/vrFBV+etWW1oeQq6TCjgLZdbVYuW2mF9
      YY58QWfk7AjzE1dxR1ppqnWwvb2Hy9/EwNnz2MUk8xNvUVJVusZOs7U4g+yppbXWpuAbITX/
      CoPPfhmHOJV9LMqWAJZpIpsqaVUjl1cpuQ3mF+bpbQywlvcQX5+lpJsEgj4CdV0kt1eJ7m7R
      MXCW9O4C6YLFYF8bWd11IhLAHWmlqT3L7JWrbN94hdbzv8z2698gZtTgi7SS3N0GQHIGGXjk
      GSa/99fsLF2lpv9TxCb/iZwUYXv2nwl3nxcH/11Q1muAxsYG1udmiNQ1UbKhoBawDSeqplDb
      3IGST9A0MsTWYoxQXRMj/W1MTq1jqEXymRjpfCP6CarKJMWBYukYlvzOvRqGpuIKO7EM7fCm
      EFvj2ve/Rc/Tv0DYL7E2dY10Kkt9Qw22DZZV/junThJlO9pkxUmwthHLKNHY2IDf68Jhlrix
      tIXf48LrcePxB5AlGZ/PjaVmefPyNB297Vg2eP1B3C43Xnd5536rlVx0id21NVyRRjrPPMvu
      xHN4modoaOkgn9gi0NDOxlvPEd9doqA7ia1NU8jlMS2dltFnCETq6XzkC5BcoGRWZSvngaBq
      G2GzW0m+9tra/XZDUAV4nAr/9aun79qOaIQJBLdRtX2AoNfJ2a6astqsSCPIPrQryeVtLtlW
      BWxWqBFWEV/fY9OlVO48XbUlkNACCS2Q0AIJBBWmakugVEFnbj9VVpsPqhamXFQq/sFGH43h
      B3P2rmoTIJEv8eO5g/vthuAI1PqaaQz77rcbHwtRAglONBUfASzTJJZI4JF0dHcddUH3bc9r
      xBIFGhtqHmAtkM3+4hVie1HqBx4hvz6Baiq0DD9BbuMKmbzJ4OOfweWQ2J9/nf1olobuUaTC
      DvFoguaxJ0mvz9Pe287OfoHuwYH7HdCJofIjgG2RjO+zuBEj7LaYnLjMjbllCpkYly9fYT+R
      YubaVS5PXKeoaaglo+IuVYJI2zDdfR2szcywPjOBK9RIOFhiezNFe4PC4vwGADszV7AdAWqb
      WlidmaV3vI+169fYX5ll9o2fUNtaGdmv4IO5B9cANltri9R1niOxv0V91wiF2BozS2lOnzuP
      bOXJdQ8QkHOk8wVUw01TbbDybpWZ3M4MSysHnPv0z+D45CfIrL7K1de3QfbidHvRsioAZ7/y
      7yllt3nzn79L0G0xPzGJt2GAzPI2mtnBmNd1nyM5WdyDawCJ7sEz1LkK5C0XGws3iKU12hoi
      XLs6QSxVQFFkZFlBlmTkMjdU7gm2ybWfvIA/4OJgZ521Ky+xtrRJU895XPYO09fn6OysYeqN
      l9idf5PFa1eobe8F2YHD4UCybPyNfZx5ZIiZiWv3O5oTRdU2whZ20/zN5Z377YbgCPzS+WZG
      28rbtReNMIHgHlC1fQCXQ6bxthmju8W+qbqXyrxDhG3b5dfXVMJmheJ3P8B35FRtCSS0QEIL
      JEoggaDCVG0JpJZM9hPFstp8oLRApolc5jP1UeP3OBXaax60ZuTHo2oTYC+j8a2re/fbjRNJ
      W8TDbz55MhpyogQSnGjKngDbG2uoJZNEIo5pVeX19V1RysWYv/Rj9nb2UFM7zL7xQ+LxJLHV
      G8xcfJFc/rDjW0ztMnvxh+xu72KbOjtzl9F0iG/MU9J1thdnqM7ph5NF2RMgkYiyurbJ7u4O
      hlFi9sYkK5t76MUcU9cnWVrfIRHd5sb1SWLpAgfRA0y9SDyRJLqzw9pmdTe/igWVrtOPMfvy
      c6hqib7T57n+4vP467tobwszM3EVAMnpZ+D808y9+hz5xA7XX/o2BQ22p95gc/IlUqpc/n1w
      Bcem7Ang8IRxW3lymoFtllBLBlMzM6ytrNE9NEouuUcinqBveJTNtWV2tncw9QL7BzGWlzdo
      bm4qt0tlxRcMMPWTb9P/5M8Q8Lu58qPnGPvEF0BPMv3WW9Q0tgDg9jhZeO15HJE2Ag1d1DXU
      AWCV8kxPXKdroO9+hiG4SUWuAbp7OtlY20SN71JyBnE5FdxOia3NDbKqjm3qbG2sobh9WLrK
      6uo6ugU19Y14nOWd+Sg3sz/+BlK4C6dscenbX6e2ZxzJUIlH47T0DpCM7rB4+SfEtjcItvZj
      5A7IJ3ZIxQ442FwDl5/HP//TTL78I6q0BXOiKHsj7O0GRqFQwOv1kEmncbi9WIUUs0vrSJ4Q
      tS6DQGMH9TVhzJKKWjLxej1ISDidhxNTi3uZqpwFKmaTqKqK4vTikE00rYTD7ccpWxQ1nWBN
      PSU1i9PpJJdJ4Q3Vg6FSyOeRFTcenxun249WyOLxB8s+JVsOjjsL9CA3wso+Dfq20z7f4S1y
      4cihSMpy1TM6FsDj9SFhIcsOJAkUjw+Xp9xeVA5PsAZP8F3hl++W5w7/egOHG31HGm4+63bh
      9t+6+bc3EKqkm4Ijcs/6ALLiIBAIvP3fvfpYgeAjqWotULk1K5ZlAZS9a2uYJo4y+1opLRQc
      Lf7jlGaiBKoQ5a6PJUkqu8rStm0kyu8rFbBZifgfdKo2AUzLpqiV9/7gd8+A5Rv0bJtDNWiZ
      Vyk3DBOHdeuB6lTkB1p6XI1UbQLspDWen0vcbzeqivPtIZ7sidxvNx4qxOlEcKI5egLYFrFY
      HBsoqgWOKvOxzBLqe0oZo6RRMj6kXrAMCsXSkV0qB6noDhZgGUU256+TLxSxLZPkwf47u7aU
      cjFWblxmd2sbo5hhfe4Gmm6QPtjDti2S0errVwiOxpETQMsluDZxlUzRZHdzldWVZTKFEtlU
      nOWlFaL7O+zGUpilIstLy2iGhZpNMDc9wdZBnv3tdTZ2DsjHD5hdmCOayGKUCizMz5Mr6ujF
      HAsz11najlUy3ltIbEzx3T/7Iwxsrv3gmzgCNVimwebUS/zg7/7mnddtXvkemquRcCTM5ee/
      icsv8+YLLzDxw2+zP/Uj1rbEdq4PKke+Boju7jN+Zoy9vQMoqkTa21hfWcIs5mlpDLAWlXCT
      ILqSJFM02UnmCUgGvV2NRIs2qVSSlfUbjI6O4w3Usrk6j6enk2Qixk4yT51boquzhc1MJcO9
      ldrOcZqb68AqEd3cQnZeZDfQw/knnmLqyuw7r4t0nmFt+TITawFqwy4WLr2Br/0C6b1rvHFR
      4yv/5nP3zmlBWTnSCGDbJjvRA3a2d9nf3cbp8VMTieB0Snj9QYIBP+FQGJfLAYqbU+cf5cxw
      F7akYJsGJS2HarloawxjGOD1uZGQWF3fZGhkBMU2sGwJRbIwTavSMb+DZRpYlolpyYTq6ugY
      P0c2vo9pHD5umRZbC1NInhCjTzyLmt4nepDm/Od/jtTmHIq/nkfP93F9cv6e+SwoL0dqhNmW
      SSavEg4GyKbTSIqMzx+kkM+CLeF1K6iGgm2V8LpkFhdXae3uxy4kiOU0Wppbie+uI3kC1EXC
      bK6tUtfaTchlsLx5QFNTIx5ZZ2s/SXNrOyG/h9WDXMVngQ5Wr7O3E8UdbqZ3oJOVqWk6T11g
      f/ZNMrkiNR3DKGaeuoY6lmdm6Rh/FKeZZXV2ns5Tj1FI7FLX0s7+1jrNnb0V9RXufhZI3BT/
      /virthN8LxLgQUMkwN0hVoUQCG6jakcAVdPJ6+V1zbJvdoKl8uW9zeEKDuU+q36QvsjrUvC7
      Pv7niBHgAdICORWJ+jJvml25hbHkB2JhLMH7ESWQ4ERTtSPAfk7n4laZN8m7+fe4Wsinu0I0
      B8W6/Q8jVZsAtg0lszouT6zqvEwSlIGKlECmYVAsFjFM67DuPuL7bNvCOtZaQjalYgHDMG5+
      rn7L+41SkVKphG3b6JqKYRjYloFpWph6SRzYgsqMAMszV1FlH5lsgb5IEGd3JyGHC6cMBVXD
      5/Nh6Bol3cLv96IVVSxJwcodsKe66e9oONLnJBdf5eJ0AjMd5xNf+hzf+7M/5NFf/8/0tdVi
      5rZ4/ls/wCfn6Dr3GGuLm5Tyac6d7WIz20By/lWe/Zf/Dl+Vr0IhqCwVSQDbtiiqKi63F9su
      sbWxiVnQCThL2LILUwmgJrcJBDw4Qt0YqVV2oxnGxgeP9TkuX5BiehFFkvHXdjA43P9une/0
      YpeyqJKNVUzirmnHoW6SSBeZ+v5fcu4XxcEvqFAJ5PKGOHv+PJKpIkku+oaGCHoVNAP6B/ox
      tByBSB19vZ0UswdkCxIeRUM9phI6ujhJ75NfwmdlUPV3H1fTMTJ7S7jbz9Lb7sOuv0Bfe4B8
      3sbvdzP45GfZm5sQJZCgMiOA3+dmenKS2sY2gn43LqC+oQGXbDE9PU/3wBDz1y4yU7IYGR1g
      dXYGO9xFJBzClo7uUsfjX+bGpTdoOfsprNgiecuHtngNR42HYNc4neFLFO0RRusdzFzeYPQz
      X6UpbONuCGIklslrJkFP1c4DCO4B960TnEgkqK2t/dDnt5Iqr2zk7qFHH84ne0K0hj54uyax
      Q8yD3Qm+b42wjzr4BYJ7RdWO/2GvwhMd5d0w+3Cws5GOqQWKeKv2axLcJVX7y3odMj215e2+
      VqoEEDy4CC2Q4ERTtSNAQjW4ES3zRfAxxUANfienm/3l9UFQVVRtApRMm4N8eVeGOy4uRQyQ
      DzviFxacaI49AqzOzdAyMMrmyjxdPQO4blmr0mBleZvevq4PfX82uofqCdIY+oDSQsuwfKDR
      134ELZBZ4NrLL7I1e5HWJ38VO7HCyuRFHvu1/0RXS5ir3/9bVN0i0Hqa/NYEqlpi+NNfZOGl
      l+nvj5B09nNqrOe44QseMo6dAIVckvm5WXZ3dwkoNnZ9L+ntZcJemZ14FgsfzE+RSGVpGxxh
      6fIVOkZPUUrvkcgU6W5rYmlljSXZzamBNhZXNnCHG/GUkqRyOZSa7qM5ovg4++kvsLE4w/iZ
      ERxmJ1vrm7Q1HW48UchmcUdqyKdjHKRLfOpTZ7l8ZYLYynWyxX6+8GufPW7ogoeQY5dADqeH
      jq5umuoi1Hb0EFudQVI8JAs6Fy6cJexzsLa6jux0IdsmtS3ddDQESWdy5LNx8kXoGx6jJuDg
      IBYHSSK6v4tmebhwegz3MQRquY1LuNsexyVLbF9/kebxT+KQJcAmk8/TOzpGKpHkscfPc+Ot
      K7j8QbyRRpymSsks83LOggeSYydAqKaOgM9LfX09suxE0nI0dnTSHPEzcfUGttNLX183ION0
      uqipCSHJMk6Hg0C4lkDIy87SHKYSwO91I8kKtTV1BL0W12aXcLuO3v5eX43z9OeeASziGYkz
      F0YopTZ489WL9A2NsDA5xeCZC2SScfA2c/6x87QPjvP0Z59heX71uKELHkLuSgtkFrPMrEU5
      NVz+LT+3UiqvbuTLbvc4tIVcfKL7o/fyElqgB1sLdFe/muIJcmq4vHIFgeBeUrV9AL9TZrje
      W1abNjbYR996KOwRkomHnapNgKBb4WzrB0uQPy5CCyS4HdEIE5xoqnYEiKsGk9HjXwSH3ApP
      tAfu/EKBgCpOAMuGonH8CSq3Iu7zFRydsiSAbdsgSR8osnx7lvXYe9PaYFvWod2b+9u+1857
      /3/vTK6N/fE/U3DiKMs1wPK16+R5d2EryzKxbZtSScPQdZaWl7FME8uy0EslDNPCtiw07XDR
      KsuyME0Dy7axbu4Qk49FufTj5/nbP/7f6LbFlW//CX/xx1+/+Yklrv3T/+Gv//JbWGaBl7/+
      33n+hddJrb7GKz96iz/+/f/JQUH/UH8FgrcpawmUj++wp7oxM1v4/CGiyTxt7e0UMjGm5ixq
      XAV2c06QbMKKjmbLyG4/lq5h5mPUtA2SzxYYG+nD39BI0FVC9gQobE+j+XuJBN7eQM/Fuac/
      wczz08iKj3NPPcWLS4fPXP7e/+M3f+c/0OgXa3kK7kzZZ4Fs20LXdVLZAkMjI9SFfKQTcRwe
      P06Xm8GRMYJeB6oJY2Oj6EUVySjir20htrVKsLYOAF03GHrqS3gLUZbWNjHUGOtLc6SSCUr6
      h+t4xh5/lq3ZSYxjLbEoOKmUZQQI1wWZm5igs7MLNbGB7Qgw1NfJwvw0zR29jJ57AlNTcbjq
      cCtQX1uHSzKYnJyiZ3AUK7OP4avFJdk01IYBKOZSXPnJi7Se/yTnnngM2VCp71wgvz2LWt/P
      9o0ZIo48O2urrMzt4NScqPI4Qxf6OeePEstqNIc95QhP8BBTtTvE7GaKvLVbPPb7wm6FT3Z/
      sDyjchtkCC3Qg6oFEo0wwYmmavsAQZfC6abja4Fcipj6FBydqk0Aj0OiO1JeLZBAcDuiBBKc
      aKp2BEhrJot7x78I9jtlTjX5KuCR4GGkahOgZNpEP8a6QGG3kDoLjo4ogQQnmvKNALbF/PQk
      uRL0dTWTMPz0Nn30/bS3Y2h5CrpMKOAlfxDljR+8RCKR52d+5VdYfPFbTO05+KVf/XlsU+XF
      v/9bVEPmqc99htmJqyxee5NPfPlLmMUQsZdn+MRXf4PGgJBDCD6asiWAXkhTcoS5MN4LuT0u
      TU2zsezg0eFO5ta2cfrCOLQUmmHgr+8ht7+IbVk0DlygsLdAKmcw2N9OpuQiFPDib2ikraWW
      ne0oxeQGexkJ2VABUPdmKEWGOOVbZSnh5dFnnmBn64Cwq8SPn/sHGr70RRrEwS84AmUrgSRZ
      wnzPWjudfSM01YXYXlulZB+uRyu5A5y7cAqrUMQbruPC2QEyqTSZtEohvUcmb6Ab79qINHfj
      1HJMvfk6WkllfWmOgmYgywq2aWKaJopDYeHV7zHwzM8iAcHaevKpFNXZ3xZUG2VLAIcnTNip
      ceXKVVIlmYDHQdDvp7O/D8kwcbs9BAJ+QCEQ8BLwB0B2E/S5kBUZXzCC1+vB7z08cycO9pm6
      coVAex+PfP7X+Okv/zyPf/Iz7E/+gH3aqbG2WUr4Ge8KkjRDjA804/TVMvrUZxmIFNlNH38G
      SXDyEFqgu0RogYQWSCB4YKnaPoDXIdMdOf6FrNchclpwdKo2AQIumdOioyuoMOJ0KTjRVO0I
      UNAtdlPvvwh2C5WooIxUdQKspLT3PR5yyyIBBGVDlECCE03FR4B8Yo/Z1W384XpG+j987zCw
      SaUyRCLhm/+bTDz/NdyDP0NfJMv3X7hIW/8wn3z2MWw9x3e/+wKJTIEv/4tf5Jtf+2OaO4d5
      5FQ3azEXxsEMI8/8tJBDCO5IxUeAvZ0d6tq6GertZHtljRIGa6sbbK4sMDm9wMHOGleuXGZr
      a4uf/PgnrG0fAGBpBTwui71YjvjaDMmCQWNbx02HXXz+S18hlN9kaWOR6dk4je09SGqUq2+8
      yPSBTb04+AVHoOIJ0Dt2FkchxhtXJsml01jYpFMZEskcYyMDqAUV29CJZgr09vTS3Xa4Q6Ts
      DhIJHU6Dtl74Ev/qX/86l779VxQtkBwy3/2rPyFw7os8Onya//UH/43V1/+R+YMiSzMzhGrq
      390UWyD4CCpeAsV2N4gm87hdXrweg+sTk9i2l4ZwGEWWyOfyyA4HDsWJZcRZ3zmgq7UBLX3A
      9evz7FFkI1xgc32JQGs/i288TzjWycs3dvh0aImVNT9XLl8lJdXzaF2IT/3Cb1BYf53t9Hna
      I2JdIMFHU7VaoL1MkavRD54Ferrj423LJLRAQgsktEACwXuo2j6AU5Go+YA9uvxOkbOC8lG1
      CRB2KzzRLhpegsoiTqeCE03VjgCaaRNVS+973ClLNPjLe3EkOLlUbQJkNZPJD5kFEgkgKBei
      BBKcaG5JgLXFaa5evcpuLE0yEef9m6wYxOPpY39INh7n/cXMnbDZmn6d9Z0kAPHVG7x56drh
      M5bBGz95gRdeuoRlarz4wj/xw5ffJB3bYGZxl5mJS8TFHmGCI3BLCVS0ZE6PD3Pl+jwhl8nm
      5iaN7b1QUqmr8ZNWVZamF9iM1DI62sfy7Cyyv5a2sIPVvTj+UD2NAYXl9R26B4eIri1geWvx
      FZIc7O1QG2nGo5j4XRYZI4DTVnFKBms7MXoHB8nHohRx0tvZilXMsDb5ClpvEx0NLq5evEi8
      5Idnz5NcucRMNkh78nVedWnMJoM0br7OjGuc+cUs6XyW3zn72P36TgUPELeMANn4Ptcmp/EG
      wkiyk6GxUySim+zvRTG0PPFkjmBtM731Djb2khR1k7n5eQqpBA1dQxRzCaanb6DrBVbXtkil
      8jgdMkgy3QPDqOkDUrEoO7E08YNdDuJxiqqKUcyxvL7O5laU9tbmQ8c8YXr7uwGYe/FbFJ1h
      4nvbaLpFqGUQe2+ata0tErqH5OplluIGQZfEGz94nvahszhksU+A4M7ckgCKw4HP76NQyKM4
      nDgUBVmWMIoZ5heWMWzIJQ9Y2IjhMbMULAXl5gHucjmRZYlQMITHH6G1uYZwOMT6+iaSpLzz
      fE3IQyxr4S7towRaiEYP8Pp82KZJuKYO182b2ku5JPPTc2zMXqbp/Bd56vEzBEJhlq/8mKWY
      zsBgHyVfD2caLdyRJoIum1zR4JNf/S32Jr7HXub9F9ACwe3cogXSSxq6YeFyu5GwkWXlcM9f
      y8SwbJxOJ6ZewpYUXE4HmlZEVpyHZ1tZwbZMZAmKWgmX242pl0B24JAlJEXBMg+fNy2QsJBk
      B7ZloJs2Tsdh1/dtncZuKsdrKwmQwOMPoUg2Jd0g4pZ4qrsGrZBHcXnxuByohRy27MTrcmBY
      INkmkuLEodx6jS+0QEILdHv8t/xqTpcb520yekVRQFHeeaHifldh6fF4b38xAF6v932vfccW
      cHiSv+mE7ET5gGNHkh34Q+H3PoLL5cLhknEqCs7guwvv+vzviuNcyvvCEgg+lKo9UiQJPmi7
      L0UStb2gfFRtAtR5HXy+T+j5BZVFNMIEJ5qqHQFMG9SSectjLlnCLZY+FJSRqk2AZNHg2m1a
      oN6Im8E6URYJyoc4nQpONOVPAEsnV9AwijmyxbvT4xRTe8RTBSxTY/7yq2zuRN95ztSyrG7s
      ADa7a3O8eukahVyCnf0U+5urpO/yswUng/IngFlgczfO1NQsLofE4swNtqNJtEKGlaVFdmNp
      cuk4M9NTZIsGqVQKyyiRyebIpJJs7ewBYKkpfvRXv8/VuV3Su+uEO4b5zl//JYe7hJV48Vtf
      50//4UW0xBrf/MENRvvbiG3c4MVXrvBXf/ccbofYLlVwZypSAm3MXEaq6cAlGRSKOlcmJkjv
      r0OwhdjeJrtbm3T29bMwO8P66jpGKcfWzi7Xr04Rqa07dMwb4dwj5wGItPawNfF9hh95isMW
      m4uf+tynUGSJ2Op19rI5vv4Xf85uusgPv/k1Bp74HB5xsSw4AhU5SjpHH0FObxLdXIFIK36v
      C9nhIBQM4HA6kGUFNZ9FcbqxTJ1E7ADdgvrmNgKew/a3bejksjnUbIqlV/6eqNTJhTMjrM9e
      ZSueJZ5MUchn8beMUO91090YIFc0+Klf+i0WXnuOrGbewUuBoBLrAlkGBc3C67TJFU0SB3t4
      w3XU+J3g8KFrBbZX5jA9NfT2dFHKJkjkdepqIkhI+HyHszybu3t846Wr2JJEXWMTsf09uuvr
      eHa0BZc/xNz0DXTDon/0HFJul4ThYaA1REpVcOhp5FATEd+tWhKhBRJaoNvjvy8LY2lFFafb
      y0cplveyxbJPg4oEEAnwkWK4e4X7dhGdQHCfqNpGWK3HwbOdt0pTneImF0GZqdoEkCXwiZkc
      QYURR5jgRFO1CRBXDb6/kqFKF68WPCRUbQIIBPeCCieARTqVIpsvHHvDFtsySR7skc6p7zym
      5tJEYwks2wbbZD8aw7YMcjmVUrGAWjLK677goafCCZDhysUZ1hen2DnIkYjHyKsaK7PXWdna
      p6SVyGSSh+K5UpGDgxi6aQGgJtPsbG7wR3/4R2iApWX4kz/9Oq/989/x2tQ2c5d+yL/9L79H
      qbjJ//3z7/A3f/EnRLPHX35LcLKpeAmkOBw4HA5Ms8ja8hIX37pGIZ9D1UrEVuZZi6WZn58n
      m4yxPD/F1OIWAL66WqzMBroziBOQHE4UI8f6boqAu8Qrs3GeHG0HYOr159BqxwTz4skAAAir
      SURBVOmq81U6HMFDxj1IACdNHYMErSTOSAuSoREIRWhoaECWXHT2dBHwOtnZj9LW1oyaLwCg
      FksMPf0V6koxtg6ibG9vo3ob+NlnRrh8eRKPA2ZuTLGwccDoo5+hsHWDbEnofwTHo8J9AC/D
      Y33UhAPo7hak+CrdfX20NoWYW1ylq7UJD9DY1Ax6gd14lp6OJgBsvcDVl37Mpz7/8/iLcfat
      Wr7w5AgL0SK/+tVnCXqcjJ8eYbSvD/tztTSFdKLxLMGWSGVDEjxUVO0mefvZIpMHJT7XE0Qq
      01IoQgsktEBikzyB4D1UbQIEXQpnm4RoTlBZqlYL5FIkGt1V657gIaFqRwCB4F4gEkBwohEJ
      IDjRiAQQnGg+3lVmPsr3Ly9R49BpHXuCtshRd3Q3mLqxyPipkTu+Uo2t8n++8SMkp4ff/e3f
      QtJVfviDF1hbXuXxL/4y3/mzP2Ds/OM88+kLfPeb12jw7jH4U7/OcEvwjrYFgrf5eAlgW5iW
      jS0pKJLGxJvXKVnQ3hxkbT+P4nTRHpTZy2iYkoOexgAb21Gae/oxDYO5G5P0jp1hfvoaej6H
      HGxEslTODHRzbSPF2cEupq8u8sgXfp3tF/6MbRU6vV76O9uZnlrApxiEIy2kMioOxeLKi//E
      mZ/7Bb4kDn7BMfnYJVD3wBjDfY3sr62xGcvj8XqQJAdDY2eI+FzkSxLnz5/DLRvEDuJYhkYs
      cbjFqm1Z2JaFaVr4QnWcHRvEsiws28K6uTer3y1RyOcpmuCWDHTDoGv4LM+caWNqLctv/8ff
      5Wwky8XlFIOnz5PbW8d4/76uAsFH8vFGAKeX1M4CeVliYOw0in0d2+HCFwzhcEhEImGcVpFr
      165R1KEm4kdHoTYSQvJ78Mglpqdu4AvWErm5DlBjOMD12RWCDR0ADD/5JPP/+Bz1Y49jrlzi
      tXyEwvYcmaKTZ07X88Lz3yGjt/KVkQ68SYu2cI6FrSRjnbVl+3IEDz8V0wIl97dY247S2j1I
      U23g2O83DKPs+hqhBRJaoHu2LlBNUzs1Te2VMi8QlAUxDSo40VS12MY0y3uDy9vVXrntWpZV
      EV8rYbMSFW+lfL0X8Vd1AshyeQcoy7LKbte2bWRZLruvb9stJ5ZlIUnSA+HrvYq/ahNAkqSy
      3QjzXpvv/VsuZFmuiK8PSvyV8rUSv5Nt27fYrdo7wgSCe0FVXwTbtoWqqljv1IM2hnG8tX+K
      aoFCQcW2bTStiG6YWJaJZR/aOm7+G7qOZdu3+GZbJqpafE/dejw/bctCNw7fV1TVd/wt3fTX
      tkxMy8Y0jMM1kY5i07ZQCwUM03rHP8u2sUwDtai946tt2xjGUWttG72kUdRK2LaNWihQuBm3
      VlQxTOvY3+3bcR76BHpJo6Qffnfvi988evyWaVC4Gb9p6BQKBUq68b74q7YEAlidmyJvAq4w
      DluloyHEetxgbKDzaAbsApdeu0xLVyfN9W5ml3aRkGlvCuON1LO0sMSFC2c56kBbSB/w2qUr
      PPLMZ8luz5Eq2tgOH14zQ9EEV6gZu5SmJexlv+hmqLv5zi7aFovTV4ibfp4Y6+TNy9dpbGmh
      s87L5OIulmVxrq+GfRpJbSwwfvYc8hGm8eN7W0RTeXKqQY3LQLXAFWzCSG1h2hBqHaKY3qXG
      DUVPM93Nd15MwCxpLC0ukknnGBzu5OrUDm3tTbQGbGY2U4BMZ6MXZ6iJ9ZVVzp09dYTv1mZj
      dYlsLkdtUxd7O5vYNowMdDCzvItl2Zzrr2XPaiC9ucDY2XO4jhB/KrbHfiJDpmASUDRkT4C6
      plYO1uYxbJtQ6yDF9F51jwCqoTA+No5cylPMxLk8vc5QX8fRDZR0nH4PyWSCVCxO/6lzNEUU
      1GKJi6++Ts/IGPIx6kxfuIGB7jYA8prE+PgpHEYB3XZz+vQ4Zj5DLrHP9ZV9BrqajmRTkmT6
      h8bxuWQsC3wehVQiwd5ekqHT43T4PWQti2uXXqexdxincjR/65s7qPE5CddEKNluTp8ax8zH
      kBy1nDl3ikIsTmJ/i+WD4pEOfgDF5aG3uxOX14dDcuD3SiTjSaLRHKfOn6HeJVPUi1x84xJ9
      QyNH+m4lSSYU9JMr6MhotHQO0t9Sz+pGlKFTh/HnLJPJN1+nsWcI1xHjD0dqyGfT+IIhfD4P
      hVyGbC4Djsg78Sf3t6o7ASxTo6RrlEzwhOroaw6xG8sc+f0GTs6eP0eDV0fFSTaTI18wcLhc
      nDkzytb6xsefFrR0NF1DM2xMQ0MrFjAkhUBtE20RFwcp9c42bsOWHYyOn6XZ78SQLFLpAhld
      wyPLjJw6RXTz8Ox4FHY3ltCcEQa722/6p2JIbnQ9j5pNY7s81Da1U+PQSalHK9fMUoHZpQ1G
      T43j9gY5c+YsAUsDD6QyKjldx+X0cGp0gK3NnSP5atsmwdpWhnubSSRz5PM5smqBSMBFMqPe
      jF85jH9r68jx65bM2XMXyCWi1Ld0ceb0KMloAl0voGYz2C4PNU3t1V0CDfb3MDuzQO/ACIaW
      pTYSYXf/AJvwkcoWWZZZm59F8bUw0N3C4vwcgcYO6vxOFE8Ap7yPboPriINA+mCHaDJPSl9m
      qLeHhZlZegaGcZs55hY26BsaRitkqI2E2d2PY+O7o5+2ZTA3M4OqGcQzKqn9LSxXiKG+Dpbn
      Z/A3tuPzu2gJBLF8Eqpu4jtCDWAYJon4BnpJo7+3g9mFdfqHhjGyByysJxgeHiaXdVMT6mE/
      niLirb+jTdMoYZaKTF+fpn+wh83VadxNbfS0NzA/N0t9excRDyjeMJ74HqZt47jjKGCzuTJP
      0XYyODxMdHMJzR1hoKuFpbfj97lo8R8v/kImwfpOlM7efkr5FEvLCfqGhpCLSRbW4wwND5HP
      esQskOBkU9UlkEBQaUQCCE40IgEEJxqRAIITjUgAwYlGJIDgRCMSQHCiEQkgONGIBBCcaEQC
      CE40/x/J9wTmwI873QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 products' width='192'>
      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
    </thumbnail>
    <thumbnail height='30' name='month' width='192'>
      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
      /wBzFVL3QxXThQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='86' name='quantity' width='192'>
      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
      8AYQsGv+HzynZShWt+/pAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='88' name='year' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABYCAYAAAAa/X5hAAAACXBIWXMAABJ0AAASdAHeZh94
      AAANVUlEQVR4nO2deVyU953H38PDyA1yyjUKiAcgEgWjRjwIYuqBmtSrbYzt7sZu2o2722yy
      +9pt8uqrrTa2a9zWdZu6eTVN0nRJjfGK1hoPgoKiiLcJgqByOIZzDo5xeGD/eAbkGMCZByz0
      9Xv/Nc785ju/n/Phd3yf73weTXt7ezsCgZO4/KU7IBjZCAEJVCEEJFCFEJBAFUJAAlUIAQlU
      IQQkUIXrQA0KCgoeRz8EIxSNSCQK1CCWMIEqhIAEqhACEqhiwE10/7TRUFHKniM3ya00UWtp
      B0lLxLgonn9uGk8FdNenbLrP3r3n2VtsxiyDu2cA85bN5sUnfBhlJ7psMZB3tIDfF1Sjj5/D
      /rW6bq/nf5TFlsv99c+P9f+8mFXB6kYp6BtVArpx+CBvnG7G2vVJ2UplaTFbt9fwnU3PsLLj
      y2soY+vOfPIbHzZtaarj6B8PU1b/DFvTRiPZnn9gqCHneAHvXmzALKvpoQuuYo4dUlQJyGRq
      xip5kDw3mRfmhhHloaH5/i22/eYC51vq2Z2nZ+WKUMBKzsFzini8wnn5u3NY6N9GSfYJ/u14
      PcWfneKjSZl8MxzAyIH3jvGBHtBq8cbap4hmrl3H/rU9npT17Hozm0ONoJ04gfRANSMUDISK
      v882pLA4tryWyRuLIonykAAXPMZMIGOS0sJsbMECYCrj6BdKtiBuQTILgySQtMSmp7DcD6CR
      Q+f1nZFdfQJZ/uxCfvt6Bs86uPw0X73J0UYALelzovBxfoCCR0DFDORCyryk3k833eVUkfJQ
      667FDaC8hqsA+DBtvFeXxoHEx2jYc7Edc3kdekIJxZeV38mwvW50sE9GDuVUKUtq6GQyJ4j1
      a6gZ1P9h2VTJrrfPcKoFwIvls8IA0NeYbC380PWYUUKDfJUHdY1Uq/384i/YqwfQMGveRCJV
      xhMMjMpTWAcy9y6d5yd7blMpA7gxa1Ua39Ip+myV22ztXJCkPkK0WGlS1QcruWdvYwbwimFZ
      olZVNMGjoV5ArXUc/OAU7xUrpzGtbygbXphLZvhDpbhKHRNdG7IM2BORuxZPNf2ousEfOvdZ
      8ST2JVTBoKJOQHIDH7/9GR9UtQMS41Jm8sMVYwnp8eWFBvkA9YCB8mog9OFr+hrbPifAC+fT
      NW1cyi/hHoAUzpJkr4HeIBgkVO2Bas4XkFXVDmhJXJrB9ud6iwcAXRCJAJi4eKtLIkiu5kqp
      MmsEjx/TVVeO0VDCx4VKNips7hTmuTsbSOAoKgRkJPtcjXLi0SXwT3NG212ZAPCJZlGcBoAv
      si9wrEYG2UpJdiGHDQBePJ3kfMKm9FwRV2VACmLFkwFOxxE4jvPlHPJd/vP1PE711yY0kZ2b
      EpTTUFM527fnkt3Ys5GGCRldMtE38ljx+7v9fnR0xhL+K812epPv8evNn3OkBbxnzOf9Z8P6
      FrJg0HF+BqozUeFIe08dmzalsX6yN94SgAZvnwAWrVnClrR+Zq8BqDl7lSO2tMHSmUI8jxtR
      UCZQhUjVClQhBCRQxYB5oKYmdflhwV83YgYSqEIISKAKISCBKoSABKpQXVRvqLrLgeOlnNU3
      UmdpB8mVsEgdazMTmDm6R1G9uYZPP73EwbImGmVw8xhN6jPT2TDFG3vFF7LFSH72FT66VMdX
      E1P4v2fDezdqNZN3/BL7rjVQ3twGkisBISFkpk8hI8pdJBaHmAETif2dwoqOHWXz2ZbuRfUd
      SH5868X5LAuy/dtYzrZ3LlLQK5yGmAXz+XGqb+eXbTXWcfrzK3x4zUhjRz10gh0BWfS88/Z5
      jpvsDWEUKSvm80qiR3/DE6hEZVF9C1bJnWmzElk3O4Sx7hpaqu+w43dXKbQY2H++mmWLg4FW
      cv90SRGP5xg2bkghbXQ7pbm5/CjHQGn2OfaMX8iaMAATh7NOk/UVoHXFi9aHIurB/QtFingk
      P5ave5JV0R64WIzk7MtjV/EDCo7c5HpiEglqBinoF3VF9WNieePlhbyWFsZYd6Wo3j04mrRY
      pcXDovq7nChWZolJc6aSFiiB5ErMvKks9gVo4rNLDwtaJR9/lixNZecrc8ns5yJ9jcF2ZXb8
      eFZFe6AFJDdf0uaPU0pDLC002J0eBYOFCgG5MO2peOK8e4RoriSvRHmo9bAV1VfVcQMAL6ZG
      d11S/JkcpZR5mCsbuA+AD8u+MZf10wIIGGB+nBwXgR/ArVt8XKZURMoWIyc/v4Me0MaGkSQq
      W4eUQaqJVpDNet5/v5AzFgBPFieHAHC/tqOGw5eIHjPKmABvwAT1TdQAYxz4PCkqka1rXdj8
      SRkHPvyMA52vaAgcn8C/rBqLt/PDETwCg1ZUr792mV8crKBKBhjFjMynWBOhzE5yW0dRvabv
      onqLlWYnPvmBtbXPPj2wMsh/IoKeDEJRvYEju/P5wy3lNKb1Ceaba5/ka6EPlSK5dCxz7X0X
      1btpcfS8ZC4q5PVPqjBInixaPYfnJ3ngYqnnTx+d4cNbX/LTDzW8+XcTsHP4FwwS6hKJspH9
      v8vhvVstWHFBl5TMtn+Y3U08AGMCO4rcjVTWdg9xv86sPPD3JAhHaOFsfhUGgIlxvDCpYxPt
      z7KvxRAJWPXF/Pm248MSPDrqiuovXmGPvh1wJT5jHj/LjCDY3uwSHkA8AI1cKeuyUMm1XL+t
      nM6CooIc2v+AlcaWgdq00mRxKKjAQVQIyERuYZ2SRIyYxEszffspqh/L0xOU01ZR7hVO1sog
      t1Kae42jRgBP5ib4O/j5PsTqbCvwzRL+2HkKq+fTI6VKua0USJxYv4YU5zPRciW/+tkFzvT3
      5pDJbNs4UdmDNFex89cFnB4oE11UwDd2V/Xb6XEL0ngz1aefmHbiCoYE52eg+kb6/5p74BHO
      3298inWxnnjZiuq9vEeTvjKNHzn7JXuE8/1NT/PyjAB0HrahSK4EhIWz4fkMIZ7HgKprYQKB
      KOcQqEIISKAK8bswgSrEDCRQhRCQQBVCQAJVjGij8Y6Yhw9dZm9RPbWWdrRu3sRNn8L3FkcR
      Jq7EDzmqNtE3Du/vbTTegeTfy2h8Sw+jcVsXutu70IfReJIdAfUZE7Thibz1UgJjRSZxSFG1
      hHUajS9I5Zevr2b/ljVk/WMyM9wBWTEaV+hhNP6D1ez/ydfZlu6PlnbFaLwzra0Yje8oaMDs
      orVZwdjDTswtq/nt8+OJkMBadZW3chy1CRY4ygg2Gq/lyzIlZmL6DCUmEoHxybw8U7HrLDtX
      SrHzAxQ8AqpqolPmJZHg0yOEE0bjgM1oHLAZjf/tjCAC+93DyLTYXTtdiIsNUX5nZrjP9Vp7
      bQSDxQg2Gg9ggm1LdPX4eY7dtyIDyFYMGldGA2DBKC7lDSkj2Gjcg0WL4zi06wvKG6vY8cs9
      7OjVpolak523CgaNEW00LumSeOslL/5731XyKyy0oMHbx5/4GCi5XEednRlPMLiMeKPxUeGx
      /OB7sd2eqz97jG9fBvAkUNyuZ0j56zAa74aR4+dqlIdRYTwhTMeHlJFtNH7zGjtz9dxuVrKN
      ssXAqd05ZOkB3EifF42jldYCxxjZRuN9ttUQMXMeW1eEiRvODTEj22g8Iob1UwMI8ex4t4Rf
      pI71G5ayQ4jnsSAKygSqEOUcAlUIAQlUIYzGBaoQM5BAFUJAAlUIAQlUIQQkUMXwNBpvNXPh
      7JfsK6yh3PgAC0rblNQEvj0zsIfvoYz+2hV2/rmSEpvReFh0LC8ui+1tACoYdIaf0bjpDj//
      n8tc7MOe12/qk2xfHmqzw2uj5MQJfpzX1LsPnuG88lIKKcJnfEgZfkbjFgt1VnAL1rFh6SRm
      h3ni3t7MtRNn2XzOhOFKCblpoSz0Ae59yc68JqxoiJk1m9fSgvBsrGDXO4WcbqriVwfK+c1a
      ncPei4JHZxgajY9i+tKn+d/vTiMt0hN3CXD1YMr0CMYB0EKHreL1S7eVOmo3HevSgvCTQOsb
      yd+kK/bC1uI75IqKxCFl+BmNB0WxZlrPm6+0UXGjkjtKVDzdAEyUlNssfmOCie9yNdZDF0gM
      APXcuuf8CAUDM7hF9WY9777rjNE4nUbjdqJyO/8MP81RphJtbDQLAgAa0dt+cREZ7NP9an6A
      l83at52vjAM6cQpUMKyNxmVzDZ/uKyDr9gMAtKHj+eGKDvf5Nlptv1qVXDR99qyxxQqIssSh
      YpgajbdhKL7O5k/KKLcCuKCbkcJ/LAzFr/O9LrhKgAxyW98HSS93cbOMoURlUb1iNJ6lbwdc
      0CVN49Ulvb2iFaNxA51G4yEPX7NnNG4uKuRfdysm4lqfYL7+XDIrdD3tF7wIDQS+gopqEzJd
      DDXrOgxANYT4itlnKBl+RuNyNbsP2RzoR4/l1Y2z7YgHuvlEl1Zzo8s9xcx3qikFIJj4cWpG
      KBiIYWc0Lpfc4WQTgCvpS6bS3w0HE56Ist0XrJyskzUYZLAaK3jvpLId106IIMXN+REKBmbY
      GY1X5Bzn1Rw7fi1dSF29nO9PAmij4vQp/j3bIDLRfyGGndG4vrZ/8XTHhcjUVH6+Ukdsh9G4
      dhS62Mm8sXG6EM9j4P8BrcwB9xhNiNMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
